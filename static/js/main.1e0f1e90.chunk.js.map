{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","SORT_FIELD_REVERSE","buttons","title","value","className","App","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","isReversed","setIsReversed","goods","preparedGoods","_toConsumableArray","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","_jsxs","children","map","button","_jsx","type","cn","onClick","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,YACtBC,EAAoB,SACpBC,EAAqB,UAErBC,EAAU,CACd,CACEC,MAAO,sBACPC,MAAOL,EACPM,UAAW,WAEb,CACEF,MAAO,iBACPC,MAAOJ,EACPK,UAAW,cAEb,CACEF,MAAO,UACPC,MAAOH,EACPI,UAAW,eAqBFC,EAAM,WACjB,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAoCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EArBiB,SAACA,EAAON,EAAWI,GAC1C,IAAMG,EAAaC,YAAOF,GAE1B,OAAQN,GACN,KAAKZ,EACHmB,EAAcE,MAAK,SAACC,EAAOC,GAAK,OAAKD,EAAME,cAAcD,EAAM,IAC/D,MACF,KAAKtB,EACHkB,EAAcE,MAAK,SAACC,EAAOC,GAAK,OAAKD,EAAMG,OAASF,EAAME,MAAM,IAMpE,OAAOT,EAAaG,EAAcO,UAAYP,CAChD,CAMgBQ,CAAiB5B,EAAiBa,EAAWI,GAE3D,OACEY,eAAA,OAAKtB,UAAU,kBAAiBuB,SAAA,CAC9BD,eAAA,OAAKtB,UAAU,UAASuB,SAAA,CACrB1B,EAAQ2B,KAAI,SAAAC,GAAM,OACjBC,cAAA,UAEEC,KAAK,SACL3B,UAAW4B,IAAG,SAAUH,EAAOzB,UAAW,CACxC,WACEyB,EAAO1B,QAAUH,GACZc,EACDe,EAAO1B,QAAUO,IAEzBuB,QAAS,WACHJ,EAAO1B,QAAUH,EACnBe,GAAeD,GAEfH,EAAakB,EAAO1B,MAExB,EAAEwB,SAEDE,EAAO3B,OAhBH2B,EAAO1B,MAiBL,KAGTO,GAAaI,IACbgB,cAAA,UACEC,KAAK,SACL3B,UAAU,4BACV6B,QAAS,WACPtB,EAAa,IACbI,GAAc,EAChB,EAAEY,SACH,aAMLG,cAAA,MAAAH,SACGX,EAAMY,KAAI,SAAAM,GAAI,OACbJ,cAAA,MACE,UAAQ,OAAMH,SAGbO,GAFIA,EAGF,QAKf,EC/GAC,IAASC,OACPN,cAACzB,EAAG,IACJgC,SAASC,eAAe,Q","file":"static/js/main.1e0f1e90.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'aplphabet';\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_REVERSE = 'reverse';\n\nconst buttons = [\n  {\n    title: 'Sort alphabetically',\n    value: SORT_FIELD_ALPHABET,\n    className: 'is-info',\n  },\n  {\n    title: 'Sort by length',\n    value: SORT_FIELD_LENGTH,\n    className: 'is-success',\n  },\n  {\n    title: 'Reverse',\n    value: SORT_FIELD_REVERSE,\n    className: 'is-warning',\n  },\n];\n\nconst getPreparedGoods = (goods, sortField, isReversed) => {\n  const preparedGoods = [...goods];\n\n  switch (sortField) {\n    case SORT_FIELD_ALPHABET:\n      preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SORT_FIELD_LENGTH:\n      preparedGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      break;\n  }\n\n  return isReversed ? preparedGoods.reverse() : preparedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = getPreparedGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        {buttons.map(button => (\n          <button\n            key={button.value}\n            type=\"button\"\n            className={cn('button', button.className, {\n              'is-light':\n                button.value === SORT_FIELD_REVERSE\n                  ? !isReversed\n                  : button.value !== sortField,\n            })}\n            onClick={() => {\n              if (button.value === SORT_FIELD_REVERSE) {\n                setIsReversed(!isReversed);\n              } else {\n                setSortField(button.value);\n              }\n            }}\n          >\n            {button.title}\n          </button>\n        ))}\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}